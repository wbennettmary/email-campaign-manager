version: '3.8'

services:
  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    sysctls:
      - net.core.somaxconn=65535
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # PostgreSQL for reliable data storage
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: campaign_manager
      POSTGRES_USER: campaign_user
      POSTGRES_PASSWORD: campaign_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    command: postgres -c max_connections=1000 -c shared_buffers=256MB -c effective_cache_size=1GB

  # FastAPI application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://campaign_user:campaign_password@postgres:5432/campaign_manager
    depends_on:
      - redis
      - postgres
    volumes:
      - ./data_lists:/app/data_lists
      - ./logs:/app/logs
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Celery worker for email processing
  celery_worker:
    build: .
    command: celery -A production_app.celery_app worker --loglevel=info --concurrency=50 --prefetch-multiplier=4
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://campaign_user:campaign_password@postgres:5432/campaign_manager
    depends_on:
      - redis
      - postgres
    volumes:
      - ./data_lists:/app/data_lists
      - ./logs:/app/logs
    restart: unless-stopped
    deploy:
      replicas: 4
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Celery beat for scheduled tasks
  celery_beat:
    build: .
    command: celery -A production_app.celery_app beat --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://campaign_user:campaign_password@postgres:5432/campaign_manager
    depends_on:
      - redis
      - postgres
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Flower for monitoring Celery
  flower:
    build: .
    command: celery -A production_app.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/var/www/static
    depends_on:
      - app
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data: